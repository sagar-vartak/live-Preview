{"version":3,"sources":["webpack://ContentstackLivePreview/webpack/universalModuleDefinition","webpack://ContentstackLivePreview/webpack/bootstrap","webpack://ContentstackLivePreview/./src/index.ts","webpack://ContentstackLivePreview/./src/LivePreview.ts","webpack://ContentstackLivePreview/./src/utils/index.ts","webpack://ContentstackLivePreview/./node_modules/morphdom/dist/morphdom-esm.js","webpack://ContentstackLivePreview/./src/utils/handleUserConfig.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","livePreview","userConfig","subscribers","init","window","ContentstackLivePreview","setOnChangeCallback","publish","Promise","resolve","values","forEach","func","subscribe","callback","Math","random","onEntryChange","onChangeCallback","initData","config","shouldReload","enable","cleanCslpOnProduction","stackDetails","apiKey","environment","contentTypeUid","entryUid","clientUrlParams","protocol","host","port","url","stackSdk","live_preview","headers","api_key","onChange","tooltip","currentElementBesideTooltip","tooltipChild","singular","multiple","tooltipCurrentChild","_entry","entry","field","getEntries","toJSON","_addEditStyleOnHover","e","trigger","composedPath","element","nodeName","getAttribute","cslpTag","split","content_type_uid","entry_uid","location","parent","classList","remove","add","_updateTooltipPosition","setAttribute","scrollHandler","locale","postMessage","from","type","data","join","redirectUrl","String","origin","open","linkClickHandler","hrefAttribute","href","_handleUserChange","entryEditParams","_updateBody","receivedBody","doc","DOMParser","parseFromString","document","body","_createCslpTooltip","_resolveIncomingMessage","history","forward","back","go","getElementById","createElement","id","insertAdjacentElement","createSingularEditButton","createMultipleEditButton","innerHTML","appendChild","_requestDataSync","hash","setInterval","currentRectOfElement","getBoundingClientRect","currentRectOfParentOfElement","parentElement","top","left","style","zIndex","hasAttribute","handleInitData","undefined","readyState","addEventListener","_removeDataCslp","querySelectorAll","node","removeAttribute","eventName","eventHandler","attachEvent","val","tooltipSingularInnerHtml","tooltipMultipleInnerHtml","editCallback","singularEditButton","linkCallback","multipleEditButton","multipleExternalLinkButtom","multipleEditFragment","createDocumentFragment","multipleDiv","range","HAS_TEMPLATE_SUPPORT","HAS_RANGE_SUPPORT","createRange","toElement","str","trim","template","content","childNodes","createFragmentFromTemplate","selectNode","createContextualFragment","createFragmentFromRange","fragment","createFragmentFromWrap","compareNodeNames","fromEl","toEl","fromCodeStart","toCodeStart","fromNodeName","toNodeName","charCodeAt","toUpperCase","syncBooleanAttrProp","specialElHandlers","OPTION","parentNode","parentName","selected","selectedIndex","INPUT","TEXTAREA","newValue","firstChild","oldValue","nodeValue","placeholder","SELECT","optgroup","curChild","nextSibling","noop","defaultGetNodeKey","morphdom","morphAttrs","fromNode","toNode","options","toNodeHtml","getNodeKey","onBeforeNodeAdded","onNodeAdded","onBeforeElUpdated","onElUpdated","onBeforeNodeDiscarded","onNodeDiscarded","onBeforeElChildrenUpdated","childrenOnly","fromNodesLookup","keyedRemovalList","addKeyedRemoval","push","removeNode","skipKeyedNodes","removeChild","walkDiscardedChildNodes","nodeType","handleNodeAdded","el","unmatchedFromEl","replaceChild","morphEl","toElKey","curToNodeKey","curFromNodeKey","fromNextSibling","toNextSibling","matchingFromEl","curToNodeChild","curFromNodeChild","outer","isSameNode","curFromNodeType","isCompatible","insertBefore","onBeforeNodeAddedResult","actualize","ownerDocument","cleanupFromEl","specialElHandler","morphChildren","indexTree","namespaceURI","morphedNode","morphedNodeType","toNodeType","nextChild","moveChildren","createElementNS","len","length","elToRemove","morphdomFactory","attr","attrName","attrNamespaceURI","attrValue","toNodeAttrs","attributes","localName","getAttributeNS","prefix","setAttributeNS","fromNodeAttrs","hasAttributeNS","removeAttributeNS","handleClientUrlParams","existingConfig","endsWith","slice","livePreviewObject","Error","JSON","parse","stringify","handleUserConfig"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContentstackLivePreview\"] = factory();\n\telse\n\t\troot[\"ContentstackLivePreview\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { IConfig } from \"./utils/types\";\nimport LivePreview from \"./LivePreview\";\n\nexport class ContentstackLivePreview {\n    static livePreview: LivePreview | null = null;\n    static userConfig: Partial<IConfig> | null = null;\n    static subscribers: any = {};\n\n    static init = (userConfig: Partial<IConfig>) => {\n        if (typeof window !== \"undefined\") {\n            if (ContentstackLivePreview.livePreview) {\n                return Promise.resolve(ContentstackLivePreview.livePreview);\n            } else {\n                ContentstackLivePreview.livePreview = new LivePreview(\n                    userConfig\n                );\n                ContentstackLivePreview.livePreview.setOnChangeCallback(\n                    ContentstackLivePreview.publish\n                );\n                return Promise.resolve(ContentstackLivePreview.livePreview);\n            }\n        } else {\n            ContentstackLivePreview.userConfig = userConfig;\n        }\n    };\n\n    static publish = () => {\n        Object.values(ContentstackLivePreview.subscribers).forEach(\n            (func: any) => {\n                func();\n            }\n        );\n    };\n\n    static subscribe = (callback: any) => {\n        ContentstackLivePreview.subscribers[Math.random() * 10000] = callback;\n    };\n\n    static onEntryChange = (onChangeCallback: () => void) => {\n        if (ContentstackLivePreview.userConfig) {\n            ContentstackLivePreview.livePreview = new LivePreview(\n                ContentstackLivePreview.userConfig\n            );\n            ContentstackLivePreview.livePreview.setOnChangeCallback(\n                ContentstackLivePreview.publish\n            );\n            ContentstackLivePreview.userConfig = null;\n        }\n        ContentstackLivePreview.subscribe(onChangeCallback);\n        onChangeCallback()\n    };\n}\n\nexport default ContentstackLivePreview;\n\nmodule.exports = ContentstackLivePreview;\n","import {\n    getEntries,\n    createSingularEditButton,\n    createMultipleEditButton,\n} from \"./utils\";\nimport { IConfig, IEntryQuery, IEntryValue } from \"./utils/types\";\nimport morphdom from \"morphdom\";\nimport { handleInitData } from \"./utils/handleUserConfig\";\n\nexport default class LivePreview {\n    /**\n     * @hideconstructor\n     */\n\n    config: IConfig = {\n        shouldReload: true,\n        enable: true,\n        cleanCslpOnProduction: true,\n\n        stackDetails: {\n            apiKey: \"\",\n            environment: \"\",\n            contentTypeUid: \"\",\n            entryUid: \"\",\n        },\n\n        clientUrlParams: {\n            // todo update for production\n            protocol: \"https\",\n            host: \"localhost\",\n            port: 8080,\n            url: \"https://localhost:8080\"\n        },\n        stackSdk: {\n            config: {\n                live_preview: {},\n            },\n            headers: {\n                api_key: \"\",\n            },\n            environment: \"\",\n        },\n\n        onChange: () => {\n            // this is intentional\n        },\n    };\n\n    tooltip: HTMLButtonElement | null = null; // this tooltip is responsible to redirect user to Contentstack edit page\n    currentElementBesideTooltip: HTMLElement | null = null; // this element helps to move tooltip with the scroll\n\n    tooltipChild: {\n        singular: HTMLDivElement | null;\n        multiple: HTMLDivElement | null;\n    } = {\n            singular: null,\n            multiple: null,\n        };\n    tooltipCurrentChild: \"multiple\" | \"singular\" = \"singular\";\n\n    _entry: IEntryValue = {};\n    entry: IEntryQuery = {\n        get: (field) => {\n            return getEntries(field, this._entry);\n        },\n        toJSON: () => {\n            return this._entry;\n        },\n    };\n\n    constructor(\n        initData: Partial<IConfig> = {},\n    ) {\n        handleInitData(initData, this.config);\n\n\n        if (this.config.enable) {\n            if (\n                typeof document !== undefined &&\n                document.readyState === \"complete\"\n            ) {\n                this._requestDataSync();\n            } else {\n                window.addEventListener(\"load\", this._requestDataSync);\n            }\n            window.addEventListener(\"message\", this._resolveIncomingMessage);\n            window.addEventListener(\"scroll\", this._updateTooltipPosition);\n            window.addEventListener(\"mouseover\", this._addEditStyleOnHover);\n        } else if (this.config.cleanCslpOnProduction) {\n            this._removeDataCslp();\n        }\n    }\n\n    _addEditStyleOnHover = (e: MouseEvent) => {\n        let trigger = true;\n        const eventTargets = e.composedPath();\n\n        for (const eventTarget of eventTargets) {\n            const element = eventTarget as HTMLElement;\n            if (element.nodeName === \"BODY\") break;\n            if (typeof element?.getAttribute !== \"function\") continue;\n\n            const cslpTag = element.getAttribute(\"data-cslp\");\n\n            if (trigger && cslpTag) {\n                const [content_type_uid, entry_uid] = cslpTag.split(\".\");\n                // add class if it not inside iframe. If it is inside, then add class if content_type_uid and entry_uid matches what we are currently editing\n                if (\n                    window.location === window.parent.location ||\n                    (content_type_uid ===\n                        this.config.stackDetails.contentTypeUid &&\n                        entry_uid === this.config.stackDetails.entryUid)\n                ) {\n                    if (this.currentElementBesideTooltip)\n                        this.currentElementBesideTooltip.classList.remove(\n                            \"cslp-edit-mode\"\n                        );\n                    element.classList.add(\"cslp-edit-mode\");\n                    this.currentElementBesideTooltip = element;\n\n                    if (this._updateTooltipPosition()) {\n                        this.tooltip?.setAttribute(\n                            \"current-data-cslp\",\n                            cslpTag\n                        );\n                        this.tooltip?.setAttribute(\n                            \"current-href\",\n                            element.getAttribute(\"href\") ?? \"\"\n                        );\n                    }\n\n                    trigger = false;\n                }\n            } else if (!trigger) {\n                element.classList.remove(\"cslp-edit-mode\");\n            }\n        }\n    };\n\n    scrollHandler = (e: MouseEvent) => {\n        if (!this.tooltip) return;\n\n        const cslpTag = this.tooltip.getAttribute(\"current-data-cslp\");\n\n        if (cslpTag) {\n            const [content_type_uid, entry_uid, locale, ...field] = cslpTag.split(\".\");\n\n            // check if opened inside an iframe\n            if (window.location !== window.parent.location) {\n                // when in iframe\n\n                if (\n                    content_type_uid ===\n                    this.config.stackDetails.contentTypeUid &&\n                    entry_uid === this.config.stackDetails.entryUid\n                ) {\n                    window.parent.postMessage(\n                        {\n                            from: \"live-preview\",\n                            type: \"scroll\",\n                            data: { field: field.join(\".\") },\n                        },\n                        \"*\"\n                    );\n                }\n            } else {\n                const protocol =\n                    String(this.config.clientUrlParams.protocol) + \"://\";\n                const host = String(this.config.clientUrlParams.host); // todo trim any '/'\n                const port = \":\" + String(this.config.clientUrlParams.port);\n\n                const redirectUrl = `${protocol}${host}${port}/#!/stack/${this.config.stackDetails.apiKey\n                    }/content-type/${content_type_uid}/${locale ?? 'en-us'}/entry/${entry_uid}/edit?preview-url=${window.location.origin\n                    }&preview-field=${field.join(\".\")}`;\n\n                window.open(redirectUrl, \"_blank\");\n            }\n        }\n    };\n\n    linkClickHandler = (e: MouseEvent) => {\n        if (!this.tooltip) return;\n\n        const hrefAttribute = this.tooltip.getAttribute(\"current-href\");\n\n        if (hrefAttribute) {\n            window.location.href = hrefAttribute;\n        }\n    };\n\n    _handleUserChange = (entryEditParams: IEntryValue) => {\n        // here we provide contentTypeUid and EntryUid to the StackDelivery SDK.\n        this.config.stackSdk.config.live_preview = {\n            ...this.config.stackSdk.config.live_preview,\n            ...entryEditParams,\n\n        }\n        this.config.onChange();\n    };\n\n    setOnChangeCallback = (onChangeCallback: () => void) => {\n        this.config.onChange = onChangeCallback;\n    };\n\n    _updateBody = (receivedBody: string) => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(receivedBody, \"text/html\");\n        morphdom(document.body, doc.body);\n        this._createCslpTooltip()\n    };\n\n    _resolveIncomingMessage = (e: MessageEvent) => {\n        if (typeof e.data !== \"object\") return;\n        const { type, from, data } = e.data;\n\n        if (from !== \"live-preview\") return;\n\n        switch (type) {\n            case \"client-data-send\":\n                if (this.config.shouldReload) {\n                    const body = data.body;\n                    if (body) this._updateBody(body);\n                } else {\n                    this._handleUserChange(data);\n                }\n                break;\n            case \"init-ack\":\n                const { contentTypeUid, entryUid } = data;\n\n                this.config.stackDetails.contentTypeUid = contentTypeUid;\n                this.config.stackDetails.entryUid = entryUid;\n                break;\n            case \"history\":\n                switch (data.type) {\n                    case \"forward\": {\n                        window.history.forward();\n                        break;\n                    }\n                    case \"backward\": {\n                        window.history.back();\n                        break;\n                    }\n                    case \"reload\": {\n                        window.history.go();\n                    }\n                }\n                break;\n        }\n    };\n\n    _createCslpTooltip = () => {\n        if (!document.getElementById(\"cslp-tooltip\")) {\n            const tooltip = document.createElement(\"button\");\n            tooltip.classList.add(\"cslp-tooltip\");\n            tooltip.id = \"cslp-tooltip\";\n            window.document.body.insertAdjacentElement(\"beforeend\", tooltip);\n            this.tooltipChild.singular = createSingularEditButton(\n                this.scrollHandler\n            );\n            this.tooltipChild.multiple = createMultipleEditButton(\n                this.scrollHandler,\n                this.linkClickHandler\n            );\n\n            tooltip.innerHTML = \"\";\n            tooltip.appendChild(this.tooltipChild.singular);\n            this.tooltip = tooltip;\n        }\n        this._updateTooltipPosition()\n    }\n\n    // Request parent for data sync when document loads\n    _requestDataSync = () => {\n        this._handleUserChange({\n            hash: \"init\",\n        });\n\n        // add edit tooltip\n        this._createCslpTooltip()\n\n        window.parent.postMessage(\n            {\n                from: \"live-preview\",\n                type: \"init\",\n                data: {\n                    config: {\n                        shouldReload: this.config.shouldReload,\n                        href: window.location.href\n                    },\n                },\n            },\n            \"*\"\n        );\n\n        // set timeout for client side (use to show warning: You are not editing this page)\n        if (!this.config.shouldReload) {\n            setInterval(() => {\n                window.parent.postMessage(\n                    {\n                        from: \"live-preview\",\n                        type: \"check-entry-page\",\n                        data: {\n                            href: window.location.href\n                        },\n                    },\n                    \"*\"\n                );\n            }, 1500)\n\n        }\n    };\n\n    _updateTooltipPosition = () => {\n        if (!this.currentElementBesideTooltip || !this.tooltip) return false;\n\n        const currentRectOfElement =\n            this.currentElementBesideTooltip.getBoundingClientRect();\n        const currentRectOfParentOfElement =\n            this.tooltip.parentElement?.getBoundingClientRect();\n\n        if (currentRectOfElement && currentRectOfParentOfElement) {\n            let top = currentRectOfElement.top - 40;\n            const left = currentRectOfElement.left - 5;\n\n            // if scrolled and element is still visible, make sure tooltip is also visible\n            if (top < 0) {\n                if (currentRectOfElement.top < 0)\n                    top = currentRectOfElement.top;\n                else top = 0;\n            }\n\n            this.tooltip.style.top = top + \"px\";\n            this.tooltip.style.zIndex =\n                this.currentElementBesideTooltip.style.zIndex || \"200\";\n            this.tooltip.style.left = left + \"px\";\n\n            if (this.tooltipChild.singular && this.tooltipChild.multiple) {\n                if (this.currentElementBesideTooltip.hasAttribute(\"href\")) {\n                    if (this.tooltipCurrentChild !== \"multiple\") {\n                        this.tooltip.innerHTML = \"\";\n                        this.tooltip.appendChild(this.tooltipChild.multiple);\n                        this.tooltipCurrentChild = \"multiple\";\n                    }\n                } else if (this.tooltipCurrentChild !== \"singular\") {\n                    this.tooltip.innerHTML = \"\";\n                    this.tooltip.appendChild(this.tooltipChild.singular);\n                    this.tooltipCurrentChild = \"singular\";\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    };\n\n    // remove attributes when livePreview is false\n    _removeDataCslp() {\n        const nodes = document.querySelectorAll(\"[data-cslp]\");\n\n        nodes.forEach((node) => {\n            node.removeAttribute(\"data-cslp\");\n        });\n    }\n}\n","import { IEntryValue } from \"./types\";\n\nexport function bindEvent(\n    element: HTMLElement | Window,\n    eventName: keyof HTMLElementEventMap,\n    eventHandler: (\n        this: HTMLElement,\n        ev: HTMLElementEventMap[typeof eventName]\n    ) => any\n) {\n    if (element.addEventListener) {\n        element.addEventListener(eventName, eventHandler, false);\n    } else if ((<any>element).attachEvent) {\n        (<any>element).attachEvent(\"on\" + eventName, eventHandler);\n    }\n}\n\nexport function getEntries(field: string, entry: IEntryValue) {\n    const paramArr = field.split(\".\");\n    let val = entry;\n\n    for (const value of paramArr) {\n        if (typeof val === \"undefined\") break;\n\n        val = val[value];\n    }\n\n    return val;\n}\n\nexport function hasWindow() {\n    return typeof window !== \"undefined\";\n}\n\nexport const tooltipSingularInnerHtml = `<div class=\"singular edit-button\">\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\n    </svg>Edit\n  </div>`;\n\nexport const tooltipMultipleInnerHtml = `<div class=\"edit-button\" title=\"edit\">\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\n    </svg>\n  </div>\n  <div title=\"click element\" class=\"external-link-button\">\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\n    </svg>\n  </div>`;\n\nexport const createSingularEditButton = (\n    editCallback: (e: MouseEvent) => void\n) => {\n    const singularEditButton = document.createElement(\"div\");\n    singularEditButton.classList.add(\"cslp-tooltip-child\", \"singular\");\n    singularEditButton.innerHTML = `<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\n    </svg>Edit`;\n\n    singularEditButton.addEventListener(\"click\", editCallback);\n\n    return singularEditButton;\n};\n\nexport const createMultipleEditButton = (\n    editCallback: (e: MouseEvent) => void,\n    linkCallback: (e: MouseEvent) => void\n) => {\n    const multipleEditButton = document.createElement(\"div\");\n    multipleEditButton.classList.add(\"cslp-tooltip-child\");\n    multipleEditButton.setAttribute(\"data-title\", \"Edit\");\n    multipleEditButton.innerHTML = ` <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M8.1 3.5L0.3 11.3C0.1 11.5 0 11.7 0 12V15C0 15.6 0.4 16 1 16H4C4.3 16 4.5 15.9 4.7 15.7L12.5 7.9L8.1 3.5Z\" fill=\"#718096\"></path>\n      <path d=\"M15.7 3.3L12.7 0.3C12.3 -0.1 11.7 -0.1 11.3 0.3L9.5 2.1L13.9 6.5L15.7 4.7C16.1 4.3 16.1 3.7 15.7 3.3Z\" fill=\"#718096\"></path>\n    </svg>`;\n\n    multipleEditButton.addEventListener(\"click\", editCallback);\n\n    const multipleExternalLinkButtom = document.createElement(\"div\");\n    multipleExternalLinkButtom.classList.add(\"cslp-tooltip-child\");\n    multipleExternalLinkButtom.setAttribute(\"data-title\", \"Go to link\");\n    multipleExternalLinkButtom.innerHTML = ` <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M2.66654 2.66758H13.3332V13.3342H6.66654V16.0009H13.3332C14.0405 16.0009 14.7187 15.72 15.2188 15.2199C15.7189 14.7198 15.9999 14.0415 15.9999 13.3342V2.66758C15.9999 1.96034 15.7189 1.28206 15.2188 0.781964C14.7187 0.281867 14.0405 0.000915527 13.3332 0.000915527H2.66654C1.9593 0.000915527 1.28102 0.281867 0.780927 0.781964C0.280829 1.28206 -0.00012207 1.96034 -0.00012207 2.66758V9.33425H2.66654V2.66758Z\" fill=\"#718096\" />\n      <path d=\"M6.94263 7.05734L0.999958 13L2.88529 14.8853L8.82796 8.94267L10.8853 11V5.00001H4.88529L6.94263 7.05734Z\" fill=\"#718096\" />\n    </svg>`;\n\n    multipleExternalLinkButtom.addEventListener(\"click\", linkCallback);\n\n    const multipleEditFragment = document.createDocumentFragment();\n    multipleEditFragment.appendChild(multipleEditButton);\n    multipleEditFragment.appendChild(multipleExternalLinkButtom);\n\n    const multipleDiv = document.createElement(\"div\");\n    multipleDiv.appendChild(multipleEditFragment);\n    multipleDiv.classList.add(\"multiple\");\n\n    return multipleDiv;\n};\n","var DOCUMENT_FRAGMENT_NODE = 11;\n\nfunction morphAttrs(fromNode, toNode) {\n    var toNodeAttrs = toNode.attributes;\n    var attr;\n    var attrName;\n    var attrNamespaceURI;\n    var attrValue;\n    var fromValue;\n\n    // document-fragments dont have attributes so lets not do anything\n    if (toNode.nodeType === DOCUMENT_FRAGMENT_NODE || fromNode.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      return;\n    }\n\n    // update attributes on original DOM element\n    for (var i = toNodeAttrs.length - 1; i >= 0; i--) {\n        attr = toNodeAttrs[i];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n        attrValue = attr.value;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n            fromValue = fromNode.getAttributeNS(attrNamespaceURI, attrName);\n\n            if (fromValue !== attrValue) {\n                if (attr.prefix === 'xmlns'){\n                    attrName = attr.name; // It's not allowed to set an attribute with the XMLNS namespace without specifying the `xmlns` prefix\n                }\n                fromNode.setAttributeNS(attrNamespaceURI, attrName, attrValue);\n            }\n        } else {\n            fromValue = fromNode.getAttribute(attrName);\n\n            if (fromValue !== attrValue) {\n                fromNode.setAttribute(attrName, attrValue);\n            }\n        }\n    }\n\n    // Remove any extra attributes found on the original DOM element that\n    // weren't found on the target element.\n    var fromNodeAttrs = fromNode.attributes;\n\n    for (var d = fromNodeAttrs.length - 1; d >= 0; d--) {\n        attr = fromNodeAttrs[d];\n        attrName = attr.name;\n        attrNamespaceURI = attr.namespaceURI;\n\n        if (attrNamespaceURI) {\n            attrName = attr.localName || attrName;\n\n            if (!toNode.hasAttributeNS(attrNamespaceURI, attrName)) {\n                fromNode.removeAttributeNS(attrNamespaceURI, attrName);\n            }\n        } else {\n            if (!toNode.hasAttribute(attrName)) {\n                fromNode.removeAttribute(attrName);\n            }\n        }\n    }\n}\n\nvar range; // Create a range object for efficently rendering strings to elements.\nvar NS_XHTML = 'http://www.w3.org/1999/xhtml';\n\nvar doc = typeof document === 'undefined' ? undefined : document;\nvar HAS_TEMPLATE_SUPPORT = !!doc && 'content' in doc.createElement('template');\nvar HAS_RANGE_SUPPORT = !!doc && doc.createRange && 'createContextualFragment' in doc.createRange();\n\nfunction createFragmentFromTemplate(str) {\n    var template = doc.createElement('template');\n    template.innerHTML = str;\n    return template.content.childNodes[0];\n}\n\nfunction createFragmentFromRange(str) {\n    if (!range) {\n        range = doc.createRange();\n        range.selectNode(doc.body);\n    }\n\n    var fragment = range.createContextualFragment(str);\n    return fragment.childNodes[0];\n}\n\nfunction createFragmentFromWrap(str) {\n    var fragment = doc.createElement('body');\n    fragment.innerHTML = str;\n    return fragment.childNodes[0];\n}\n\n/**\n * This is about the same\n * var html = new DOMParser().parseFromString(str, 'text/html');\n * return html.body.firstChild;\n *\n * @method toElement\n * @param {String} str\n */\nfunction toElement(str) {\n    str = str.trim();\n    if (HAS_TEMPLATE_SUPPORT) {\n      // avoid restrictions on content for things like `<tr><th>Hi</th></tr>` which\n      // createContextualFragment doesn't support\n      // <template> support not available in IE\n      return createFragmentFromTemplate(str);\n    } else if (HAS_RANGE_SUPPORT) {\n      return createFragmentFromRange(str);\n    }\n\n    return createFragmentFromWrap(str);\n}\n\n/**\n * Returns true if two node's names are the same.\n *\n * NOTE: We don't bother checking `namespaceURI` because you will never find two HTML elements with the same\n *       nodeName and different namespace URIs.\n *\n * @param {Element} a\n * @param {Element} b The target element\n * @return {boolean}\n */\nfunction compareNodeNames(fromEl, toEl) {\n    var fromNodeName = fromEl.nodeName;\n    var toNodeName = toEl.nodeName;\n    var fromCodeStart, toCodeStart;\n\n    if (fromNodeName === toNodeName) {\n        return true;\n    }\n\n    fromCodeStart = fromNodeName.charCodeAt(0);\n    toCodeStart = toNodeName.charCodeAt(0);\n\n    // If the target element is a virtual DOM node or SVG node then we may\n    // need to normalize the tag name before comparing. Normal HTML elements that are\n    // in the \"http://www.w3.org/1999/xhtml\"\n    // are converted to upper case\n    if (fromCodeStart <= 90 && toCodeStart >= 97) { // from is upper and to is lower\n        return fromNodeName === toNodeName.toUpperCase();\n    } else if (toCodeStart <= 90 && fromCodeStart >= 97) { // to is upper and from is lower\n        return toNodeName === fromNodeName.toUpperCase();\n    } else {\n        return false;\n    }\n}\n\n/**\n * Create an element, optionally with a known namespace URI.\n *\n * @param {string} name the element name, e.g. 'div' or 'svg'\n * @param {string} [namespaceURI] the element's namespace URI, i.e. the value of\n * its `xmlns` attribute or its inferred namespace.\n *\n * @return {Element}\n */\nfunction createElementNS(name, namespaceURI) {\n    return !namespaceURI || namespaceURI === NS_XHTML ?\n        doc.createElement(name) :\n        doc.createElementNS(namespaceURI, name);\n}\n\n/**\n * Copies the children of one DOM element to another DOM element\n */\nfunction moveChildren(fromEl, toEl) {\n    var curChild = fromEl.firstChild;\n    while (curChild) {\n        var nextChild = curChild.nextSibling;\n        toEl.appendChild(curChild);\n        curChild = nextChild;\n    }\n    return toEl;\n}\n\nfunction syncBooleanAttrProp(fromEl, toEl, name) {\n    if (fromEl[name] !== toEl[name]) {\n        fromEl[name] = toEl[name];\n        if (fromEl[name]) {\n            fromEl.setAttribute(name, '');\n        } else {\n            fromEl.removeAttribute(name);\n        }\n    }\n}\n\nvar specialElHandlers = {\n    OPTION: function(fromEl, toEl) {\n        var parentNode = fromEl.parentNode;\n        if (parentNode) {\n            var parentName = parentNode.nodeName.toUpperCase();\n            if (parentName === 'OPTGROUP') {\n                parentNode = parentNode.parentNode;\n                parentName = parentNode && parentNode.nodeName.toUpperCase();\n            }\n            if (parentName === 'SELECT' && !parentNode.hasAttribute('multiple')) {\n                if (fromEl.hasAttribute('selected') && !toEl.selected) {\n                    // Workaround for MS Edge bug where the 'selected' attribute can only be\n                    // removed if set to a non-empty value:\n                    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12087679/\n                    fromEl.setAttribute('selected', 'selected');\n                    fromEl.removeAttribute('selected');\n                }\n                // We have to reset select element's selectedIndex to -1, otherwise setting\n                // fromEl.selected using the syncBooleanAttrProp below has no effect.\n                // The correct selectedIndex will be set in the SELECT special handler below.\n                parentNode.selectedIndex = -1;\n            }\n        }\n        syncBooleanAttrProp(fromEl, toEl, 'selected');\n    },\n    /**\n     * The \"value\" attribute is special for the <input> element since it sets\n     * the initial value. Changing the \"value\" attribute without changing the\n     * \"value\" property will have no effect since it is only used to the set the\n     * initial value.  Similar for the \"checked\" attribute, and \"disabled\".\n     */\n    INPUT: function(fromEl, toEl) {\n        syncBooleanAttrProp(fromEl, toEl, 'checked');\n        syncBooleanAttrProp(fromEl, toEl, 'disabled');\n\n        if (fromEl.value !== toEl.value) {\n            fromEl.value = toEl.value;\n        }\n\n        if (!toEl.hasAttribute('value')) {\n            fromEl.removeAttribute('value');\n        }\n    },\n\n    TEXTAREA: function(fromEl, toEl) {\n        var newValue = toEl.value;\n        if (fromEl.value !== newValue) {\n            fromEl.value = newValue;\n        }\n\n        var firstChild = fromEl.firstChild;\n        if (firstChild) {\n            // Needed for IE. Apparently IE sets the placeholder as the\n            // node value and vise versa. This ignores an empty update.\n            var oldValue = firstChild.nodeValue;\n\n            if (oldValue == newValue || (!newValue && oldValue == fromEl.placeholder)) {\n                return;\n            }\n\n            firstChild.nodeValue = newValue;\n        }\n    },\n    SELECT: function(fromEl, toEl) {\n        if (!toEl.hasAttribute('multiple')) {\n            var selectedIndex = -1;\n            var i = 0;\n            // We have to loop through children of fromEl, not toEl since nodes can be moved\n            // from toEl to fromEl directly when morphing.\n            // At the time this special handler is invoked, all children have already been morphed\n            // and appended to / removed from fromEl, so using fromEl here is safe and correct.\n            var curChild = fromEl.firstChild;\n            var optgroup;\n            var nodeName;\n            while(curChild) {\n                nodeName = curChild.nodeName && curChild.nodeName.toUpperCase();\n                if (nodeName === 'OPTGROUP') {\n                    optgroup = curChild;\n                    curChild = optgroup.firstChild;\n                } else {\n                    if (nodeName === 'OPTION') {\n                        if (curChild.hasAttribute('selected')) {\n                            selectedIndex = i;\n                            break;\n                        }\n                        i++;\n                    }\n                    curChild = curChild.nextSibling;\n                    if (!curChild && optgroup) {\n                        curChild = optgroup.nextSibling;\n                        optgroup = null;\n                    }\n                }\n            }\n\n            fromEl.selectedIndex = selectedIndex;\n        }\n    }\n};\n\nvar ELEMENT_NODE = 1;\nvar DOCUMENT_FRAGMENT_NODE$1 = 11;\nvar TEXT_NODE = 3;\nvar COMMENT_NODE = 8;\n\nfunction noop() {}\n\nfunction defaultGetNodeKey(node) {\n  if (node) {\n      return (node.getAttribute && node.getAttribute('id')) || node.id;\n  }\n}\n\nfunction morphdomFactory(morphAttrs) {\n\n    return function morphdom(fromNode, toNode, options) {\n        if (!options) {\n            options = {};\n        }\n\n        if (typeof toNode === 'string') {\n            if (fromNode.nodeName === '#document' || fromNode.nodeName === 'HTML' || fromNode.nodeName === 'BODY') {\n                var toNodeHtml = toNode;\n                toNode = doc.createElement('html');\n                toNode.innerHTML = toNodeHtml;\n            } else {\n                toNode = toElement(toNode);\n            }\n        }\n\n        var getNodeKey = options.getNodeKey || defaultGetNodeKey;\n        var onBeforeNodeAdded = options.onBeforeNodeAdded || noop;\n        var onNodeAdded = options.onNodeAdded || noop;\n        var onBeforeElUpdated = options.onBeforeElUpdated || noop;\n        var onElUpdated = options.onElUpdated || noop;\n        var onBeforeNodeDiscarded = options.onBeforeNodeDiscarded || noop;\n        var onNodeDiscarded = options.onNodeDiscarded || noop;\n        var onBeforeElChildrenUpdated = options.onBeforeElChildrenUpdated || noop;\n        var childrenOnly = options.childrenOnly === true;\n\n        // This object is used as a lookup to quickly find all keyed elements in the original DOM tree.\n        var fromNodesLookup = Object.create(null);\n        var keyedRemovalList = [];\n\n        function addKeyedRemoval(key) {\n            keyedRemovalList.push(key);\n        }\n\n        function walkDiscardedChildNodes(node, skipKeyedNodes) {\n            if (node.nodeType === ELEMENT_NODE) {\n                var curChild = node.firstChild;\n                while (curChild) {\n\n                    var key = undefined;\n\n                    if (skipKeyedNodes && (key = getNodeKey(curChild))) {\n                        // If we are skipping keyed nodes then we add the key\n                        // to a list so that it can be handled at the very end.\n                        addKeyedRemoval(key);\n                    } else {\n                        // Only report the node as discarded if it is not keyed. We do this because\n                        // at the end we loop through all keyed elements that were unmatched\n                        // and then discard them in one final pass.\n                        onNodeDiscarded(curChild);\n                        if (curChild.firstChild) {\n                            walkDiscardedChildNodes(curChild, skipKeyedNodes);\n                        }\n                    }\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        /**\n         * Removes a DOM node out of the original DOM\n         *\n         * @param  {Node} node The node to remove\n         * @param  {Node} parentNode The nodes parent\n         * @param  {Boolean} skipKeyedNodes If true then elements with keys will be skipped and not discarded.\n         * @return {undefined}\n         */\n        function removeNode(node, parentNode, skipKeyedNodes) {\n            if (onBeforeNodeDiscarded(node) === false) {\n                return;\n            }\n\n            if (parentNode) {\n                parentNode.removeChild(node);\n            }\n\n            onNodeDiscarded(node);\n            walkDiscardedChildNodes(node, skipKeyedNodes);\n        }\n\n        // // TreeWalker implementation is no faster, but keeping this around in case this changes in the future\n        // function indexTree(root) {\n        //     var treeWalker = document.createTreeWalker(\n        //         root,\n        //         NodeFilter.SHOW_ELEMENT);\n        //\n        //     var el;\n        //     while((el = treeWalker.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        // // NodeIterator implementation is no faster, but keeping this around in case this changes in the future\n        //\n        // function indexTree(node) {\n        //     var nodeIterator = document.createNodeIterator(node, NodeFilter.SHOW_ELEMENT);\n        //     var el;\n        //     while((el = nodeIterator.nextNode())) {\n        //         var key = getNodeKey(el);\n        //         if (key) {\n        //             fromNodesLookup[key] = el;\n        //         }\n        //     }\n        // }\n\n        function indexTree(node) {\n            if (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE$1) {\n                var curChild = node.firstChild;\n                while (curChild) {\n                    var key = getNodeKey(curChild);\n                    if (key) {\n                        fromNodesLookup[key] = curChild;\n                    }\n\n                    // Walk recursively\n                    indexTree(curChild);\n\n                    curChild = curChild.nextSibling;\n                }\n            }\n        }\n\n        indexTree(fromNode);\n\n        function handleNodeAdded(el) {\n            onNodeAdded(el);\n\n            var curChild = el.firstChild;\n            while (curChild) {\n                var nextSibling = curChild.nextSibling;\n\n                var key = getNodeKey(curChild);\n                if (key) {\n                    var unmatchedFromEl = fromNodesLookup[key];\n                    // if we find a duplicate #id node in cache, replace `el` with cache value\n                    // and morph it to the child node.\n                    if (unmatchedFromEl && compareNodeNames(curChild, unmatchedFromEl)) {\n                        curChild.parentNode.replaceChild(unmatchedFromEl, curChild);\n                        morphEl(unmatchedFromEl, curChild);\n                    } else {\n                      handleNodeAdded(curChild);\n                    }\n                } else {\n                  // recursively call for curChild and it's children to see if we find something in\n                  // fromNodesLookup\n                  handleNodeAdded(curChild);\n                }\n\n                curChild = nextSibling;\n            }\n        }\n\n        function cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey) {\n            // We have processed all of the \"to nodes\". If curFromNodeChild is\n            // non-null then we still have some from nodes left over that need\n            // to be removed\n            while (curFromNodeChild) {\n                var fromNextSibling = curFromNodeChild.nextSibling;\n                if ((curFromNodeKey = getNodeKey(curFromNodeChild))) {\n                    // Since the node is keyed it might be matched up later so we defer\n                    // the actual removal to later\n                    addKeyedRemoval(curFromNodeKey);\n                } else {\n                    // NOTE: we skip nested keyed nodes from being removed since there is\n                    //       still a chance they will be matched up later\n                    removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                }\n                curFromNodeChild = fromNextSibling;\n            }\n        }\n\n        function morphEl(fromEl, toEl, childrenOnly) {\n            var toElKey = getNodeKey(toEl);\n\n            if (toElKey) {\n                // If an element with an ID is being morphed then it will be in the final\n                // DOM so clear it out of the saved elements collection\n                delete fromNodesLookup[toElKey];\n            }\n\n            if (!childrenOnly) {\n                // optional\n                if (onBeforeElUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n\n                // update attributes on original DOM element first\n                morphAttrs(fromEl, toEl);\n                // optional\n                onElUpdated(fromEl);\n\n                if (onBeforeElChildrenUpdated(fromEl, toEl) === false) {\n                    return;\n                }\n            }\n\n            if (fromEl.nodeName !== 'TEXTAREA') {\n              morphChildren(fromEl, toEl);\n            } else {\n              specialElHandlers.TEXTAREA(fromEl, toEl);\n            }\n        }\n\n        function morphChildren(fromEl, toEl) {\n            var curToNodeChild = toEl.firstChild;\n            var curFromNodeChild = fromEl.firstChild;\n            var curToNodeKey;\n            var curFromNodeKey;\n\n            var fromNextSibling;\n            var toNextSibling;\n            var matchingFromEl;\n\n            // walk the children\n            outer: while (curToNodeChild) {\n                toNextSibling = curToNodeChild.nextSibling;\n                curToNodeKey = getNodeKey(curToNodeChild);\n\n                // walk the fromNode children all the way through\n                while (curFromNodeChild) {\n                    fromNextSibling = curFromNodeChild.nextSibling;\n\n                    if (curToNodeChild.isSameNode && curToNodeChild.isSameNode(curFromNodeChild)) {\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    curFromNodeKey = getNodeKey(curFromNodeChild);\n\n                    var curFromNodeType = curFromNodeChild.nodeType;\n\n                    // this means if the curFromNodeChild doesnt have a match with the curToNodeChild\n                    var isCompatible = undefined;\n\n                    if (curFromNodeType === curToNodeChild.nodeType) {\n                        if (curFromNodeType === ELEMENT_NODE) {\n                            // Both nodes being compared are Element nodes\n\n                            if (curToNodeKey) {\n                                // The target node has a key so we want to match it up with the correct element\n                                // in the original DOM tree\n                                if (curToNodeKey !== curFromNodeKey) {\n                                    // The current element in the original DOM tree does not have a matching key so\n                                    // let's check our lookup to see if there is a matching element in the original\n                                    // DOM tree\n                                    if ((matchingFromEl = fromNodesLookup[curToNodeKey])) {\n                                        if (fromNextSibling === matchingFromEl) {\n                                            // Special case for single element removals. To avoid removing the original\n                                            // DOM node out of the tree (since that can break CSS transitions, etc.),\n                                            // we will instead discard the current node and wait until the next\n                                            // iteration to properly match up the keyed target element with its matching\n                                            // element in the original tree\n                                            isCompatible = false;\n                                        } else {\n                                            // We found a matching keyed element somewhere in the original DOM tree.\n                                            // Let's move the original DOM node into the current position and morph\n                                            // it.\n\n                                            // NOTE: We use insertBefore instead of replaceChild because we want to go through\n                                            // the `removeNode()` function for the node that is being discarded so that\n                                            // all lifecycle hooks are correctly invoked\n                                            fromEl.insertBefore(matchingFromEl, curFromNodeChild);\n\n                                            // fromNextSibling = curFromNodeChild.nextSibling;\n\n                                            if (curFromNodeKey) {\n                                                // Since the node is keyed it might be matched up later so we defer\n                                                // the actual removal to later\n                                                addKeyedRemoval(curFromNodeKey);\n                                            } else {\n                                                // NOTE: we skip nested keyed nodes from being removed since there is\n                                                //       still a chance they will be matched up later\n                                                removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                                            }\n\n                                            curFromNodeChild = matchingFromEl;\n                                        }\n                                    } else {\n                                        // The nodes are not compatible since the \"to\" node has a key and there\n                                        // is no matching keyed node in the source tree\n                                        isCompatible = false;\n                                    }\n                                }\n                            } else if (curFromNodeKey) {\n                                // The original has a key\n                                isCompatible = false;\n                            }\n\n                            isCompatible = isCompatible !== false && compareNodeNames(curFromNodeChild, curToNodeChild);\n                            if (isCompatible) {\n                                // We found compatible DOM elements so transform\n                                // the current \"from\" node to match the current\n                                // target DOM node.\n                                // MORPH\n                                morphEl(curFromNodeChild, curToNodeChild);\n                            }\n\n                        } else if (curFromNodeType === TEXT_NODE || curFromNodeType == COMMENT_NODE) {\n                            // Both nodes being compared are Text or Comment nodes\n                            isCompatible = true;\n                            // Simply update nodeValue on the original node to\n                            // change the text value\n                            if (curFromNodeChild.nodeValue !== curToNodeChild.nodeValue) {\n                                curFromNodeChild.nodeValue = curToNodeChild.nodeValue;\n                            }\n\n                        }\n                    }\n\n                    if (isCompatible) {\n                        // Advance both the \"to\" child and the \"from\" child since we found a match\n                        // Nothing else to do as we already recursively called morphChildren above\n                        curToNodeChild = toNextSibling;\n                        curFromNodeChild = fromNextSibling;\n                        continue outer;\n                    }\n\n                    // No compatible match so remove the old node from the DOM and continue trying to find a\n                    // match in the original DOM. However, we only do this if the from node is not keyed\n                    // since it is possible that a keyed node might match up with a node somewhere else in the\n                    // target tree and we don't want to discard it just yet since it still might find a\n                    // home in the final DOM tree. After everything is done we will remove any keyed nodes\n                    // that didn't find a home\n                    if (curFromNodeKey) {\n                        // Since the node is keyed it might be matched up later so we defer\n                        // the actual removal to later\n                        addKeyedRemoval(curFromNodeKey);\n                    } else {\n                        // NOTE: we skip nested keyed nodes from being removed since there is\n                        //       still a chance they will be matched up later\n                        removeNode(curFromNodeChild, fromEl, true /* skip keyed nodes */);\n                    }\n\n                    curFromNodeChild = fromNextSibling;\n                } // END: while(curFromNodeChild) {}\n\n                // If we got this far then we did not find a candidate match for\n                // our \"to node\" and we exhausted all of the children \"from\"\n                // nodes. Therefore, we will just append the current \"to\" node\n                // to the end\n                if (curToNodeKey && (matchingFromEl = fromNodesLookup[curToNodeKey]) && compareNodeNames(matchingFromEl, curToNodeChild)) {\n                    fromEl.appendChild(matchingFromEl);\n                    // MORPH\n                    morphEl(matchingFromEl, curToNodeChild);\n                } else {\n                    var onBeforeNodeAddedResult = onBeforeNodeAdded(curToNodeChild);\n                    if (onBeforeNodeAddedResult !== false) {\n                        if (onBeforeNodeAddedResult) {\n                            curToNodeChild = onBeforeNodeAddedResult;\n                        }\n\n                        if (curToNodeChild.actualize) {\n                            curToNodeChild = curToNodeChild.actualize(fromEl.ownerDocument || doc);\n                        }\n                        fromEl.appendChild(curToNodeChild);\n                        handleNodeAdded(curToNodeChild);\n                    }\n                }\n\n                curToNodeChild = toNextSibling;\n                curFromNodeChild = fromNextSibling;\n            }\n\n            cleanupFromEl(fromEl, curFromNodeChild, curFromNodeKey);\n\n            var specialElHandler = specialElHandlers[fromEl.nodeName];\n            if (specialElHandler) {\n                specialElHandler(fromEl, toEl);\n            }\n        } // END: morphChildren(...)\n\n        var morphedNode = fromNode;\n        var morphedNodeType = morphedNode.nodeType;\n        var toNodeType = toNode.nodeType;\n\n        if (!childrenOnly) {\n            // Handle the case where we are given two DOM nodes that are not\n            // compatible (e.g. <div> --> <span> or <div> --> TEXT)\n            if (morphedNodeType === ELEMENT_NODE) {\n                if (toNodeType === ELEMENT_NODE) {\n                    if (!compareNodeNames(fromNode, toNode)) {\n                        onNodeDiscarded(fromNode);\n                        morphedNode = moveChildren(fromNode, createElementNS(toNode.nodeName, toNode.namespaceURI));\n                    }\n                } else {\n                    // Going from an element node to a text node\n                    morphedNode = toNode;\n                }\n            } else if (morphedNodeType === TEXT_NODE || morphedNodeType === COMMENT_NODE) { // Text or comment node\n                if (toNodeType === morphedNodeType) {\n                    if (morphedNode.nodeValue !== toNode.nodeValue) {\n                        morphedNode.nodeValue = toNode.nodeValue;\n                    }\n\n                    return morphedNode;\n                } else {\n                    // Text node to something else\n                    morphedNode = toNode;\n                }\n            }\n        }\n\n        if (morphedNode === toNode) {\n            // The \"to node\" was not compatible with the \"from node\" so we had to\n            // toss out the \"from node\" and use the \"to node\"\n            onNodeDiscarded(fromNode);\n        } else {\n            if (toNode.isSameNode && toNode.isSameNode(morphedNode)) {\n                return;\n            }\n\n            morphEl(morphedNode, toNode, childrenOnly);\n\n            // We now need to loop over any keyed nodes that might need to be\n            // removed. We only do the removal if we know that the keyed node\n            // never found a match. When a keyed node is matched up we remove\n            // it out of fromNodesLookup and we use fromNodesLookup to determine\n            // if a keyed node has been matched up or not\n            if (keyedRemovalList) {\n                for (var i=0, len=keyedRemovalList.length; i<len; i++) {\n                    var elToRemove = fromNodesLookup[keyedRemovalList[i]];\n                    if (elToRemove) {\n                        removeNode(elToRemove, elToRemove.parentNode, false);\n                    }\n                }\n            }\n        }\n\n        if (!childrenOnly && morphedNode !== fromNode && fromNode.parentNode) {\n            if (morphedNode.actualize) {\n                morphedNode = morphedNode.actualize(fromNode.ownerDocument || doc);\n            }\n            // If we had to swap out the from node with a new node because the old\n            // node was not compatible with the target node then we need to\n            // replace the old DOM node in the original DOM tree. This is only\n            // possible if the original DOM node was part of a DOM tree which\n            // we know is the case if it has a parent node.\n            fromNode.parentNode.replaceChild(morphedNode, fromNode);\n        }\n\n        return morphedNode;\n    };\n}\n\nvar morphdom = morphdomFactory(morphAttrs);\n\nexport default morphdom;\n","import { IClientUrlParams, IConfig, IStackSdk } from \"./types\";\n\nconst handleClientUrlParams = (\n    existingConfig: IConfig,\n    userConfig: Partial<IClientUrlParams>\n) => {\n    existingConfig.clientUrlParams.host =\n        userConfig.host ?? existingConfig.clientUrlParams.host;\n    existingConfig.clientUrlParams.protocol =\n        userConfig.protocol ?? existingConfig.clientUrlParams.protocol;\n    existingConfig.clientUrlParams.port =\n        userConfig.port ?? existingConfig.clientUrlParams.port;\n\n    if (userConfig.protocol !== undefined && userConfig.port === undefined) {\n        switch (userConfig.protocol) {\n            case \"http\": {\n                existingConfig.clientUrlParams.port = 80;\n                break;\n            }\n            case \"https\": {\n                existingConfig.clientUrlParams.port = 443;\n                break;\n            }\n        }\n    }\n\n    // build url\n    let host = existingConfig.clientUrlParams.host\n\n    if (host.endsWith('/')) {\n        host = host.slice(0, -1)\n    }\n\n    existingConfig.clientUrlParams.url = `${existingConfig.clientUrlParams.protocol}://${existingConfig.clientUrlParams.host}:${existingConfig.clientUrlParams.port}`\n};\n\nfunction isInitDataStackSdk(\n    initObj: Partial<IConfig> | Partial<IStackSdk>\n): initObj is IStackSdk {\n    return initObj.hasOwnProperty(\"cachePolicy\");\n}\n\nexport const handleInitData = (\n    initData: Partial<IConfig> | Partial<IStackSdk>,\n    config: IConfig\n) => {\n    // const config: IConfig = JSON.parse(JSON.stringify(config));\n    // only have stack sdk\n    if (isInitDataStackSdk(initData)) {\n        const livePreviewObject = initData?.config?.live_preview || {};\n\n        // only stack indicates that user is running it on client side application\n        config.shouldReload = false;\n\n        config.enable =\n            livePreviewObject.enable ?? config.enable;\n\n        config.cleanCslpOnProduction =\n            livePreviewObject.cleanCslpOnProduction ??\n            config.cleanCslpOnProduction;\n\n        config.stackSdk = initData\n\n        if (!initData.hasOwnProperty(\"headers\"))\n            throw new Error(\"Please add Api key to continue\");\n\n        // stack details\n        if (!initData.headers.hasOwnProperty(\"api_key\"))\n            throw new Error(\"Please add the stack API key for live preview\");\n        else {\n            config.stackDetails.apiKey = initData.headers.api_key;\n        }\n        if (initData.hasOwnProperty(\"environment\")) {\n            config.stackDetails.environment = initData.environment;\n        }\n\n        // client URL params\n        handleClientUrlParams(\n            config,\n            livePreviewObject.clientUrlParams ?? config.clientUrlParams\n        );\n    } else {\n        const stackSdk: Partial<IStackSdk> =\n            initData.stackSdk || config.stackSdk;\n\n        config.enable =\n            initData.enable ??\n            stackSdk.config?.live_preview?.enable ??\n            config.enable;\n\n        config.shouldReload = initData.shouldReload ?? stackSdk.config?.live_preview?.shouldReload ?? false\n\n        config.stackSdk = {\n            ...config.stackSdk,\n            ...stackSdk\n        }\n\n        config.cleanCslpOnProduction =\n            initData.cleanCslpOnProduction ??\n            stackSdk.config?.live_preview?.cleanCslpOnProduction ??\n            config.cleanCslpOnProduction;\n\n        config.stackDetails.apiKey =\n            initData.stackDetails?.apiKey ??\n            stackSdk.headers?.api_key ??\n            config.stackDetails.apiKey;\n\n        if (!config.stackDetails.apiKey)\n            throw new Error(\"Please add the stack API key for live preview\");\n\n        config.stackDetails.environment =\n            initData.stackDetails?.environment ??\n            stackSdk.environment ??\n            config.stackDetails.environment;\n\n        // client URL params\n        handleClientUrlParams(\n            config,\n            initData.clientUrlParams ??\n                stackSdk.config?.live_preview?.clientUrlParams ??\n                config.clientUrlParams\n        );\n    }\n\n\n    return JSON.parse(JSON.stringify(config));\n};\n\nexport const handleUserConfig = {\n    clientUrlParams: handleClientUrlParams,\n};\n"],"sourceRoot":""}